<!doctype html>

<html lang="{{ app.request.locale }}">
    <head>
        <meta charset="utf-8">
        <meta name="generator" content="RadioLista v{{ version }} — {{ app.request.schemeAndHttpHost }}">
        <title>{{ radio_table.name }} — RadioLista</title>
        <style>
            body {
                margin: 0.1em 3% 2em 3%;
                background: #fff;
                color: #000;
                cursor: default;
                font: 16px 'Lato', 'Cantarell', 'SF Pro Display', 'Ubuntu', 'Droid Sans', 'Source Sans Pro', 'Segoe UI', 'Tahoma', sans-serif;
                {# Needed for Cantarell and number indentation. -#}
                font-variant-numeric: tabular-nums;
            }
            .sr-only {
                position: absolute !important;
                height: 1px; width: 1px;
                overflow: hidden;
                clip: rect(1px, 1px, 1px, 1px);
            }
            a {
                color: #0850AA;
                text-decoration: none;
                border-bottom: 1px solid #aaa;
            }
            h1 {
                font-weight: normal;
                text-align: center;
                {# Weird combination of margin and padding needed for wkhtmltopdf. -#}
                margin: 0.5em 0 0.1em;
                padding: 0.3em 0 0.75em;
            }
            table {
                width: 100%;
                border-collapse: collapse;
            }
            table th {
                text-align: left;
                white-space: nowrap;
            }
            table td {
                border-top: 1px solid #ebebeb;
            }
            table th, table td {
                padding: 0.35em 0.5em;
            }
            table tbody tr {
                transition: all ease-out 0.1s;
            }
            table tbody tr:hover {
                background: #eee;
            }
            table time {
                white-space: nowrap;
            }
            .quality {
                color: rgba(0,0,0, 0);
            }
            .quality::before {
                margin-right: -10px;
                letter-spacing: 2px;
                color: #222;
            }
            .quality.quality-5::before {
                content: "●●●●●";
            }
            .quality.quality-4::before {
                content: "●●●●";
            }
            .quality.quality-3::before {
                content: "●●●";
            }
            .quality.quality-2::before {
                content: "●●";
            }
            .quality.quality-1::before {
                content: "●";
            }
            .marker-1 {
                font-weight: bold;
            }
            .marker-2 {
                font-style: italic;
            }
            .marker-3 {
                text-decoration: line-through;
            }
            .marker-4 {
                background: rgba(255,209,209, 0.65);
            }
            .marker-5 {
                background: rgba(175,255,150, 0.65);
            }
            .marker-6 {
                background: rgba(156,230,255, 0.65);
            }
            .rds {
                white-space: pre;
                font-family: 'Inconsolata', 'Consolas', 'Source Code Pro', 'Lucida Console', monospace;
                background: #dedede;
                padding: 0 3px;
                {# Reset markers. -#}
                font-weight: normal;
                font-style: normal;
                text-decoration: none;
            }
            .number-indent-1::before {
                content: "0";
                opacity: 0;
            }
            .number-indent-2::before {
                content: "00";
                opacity: 0;
            }
            .number-indent-3::before {
                content: "000";
                opacity: 0;
            }
            .number-indent-4::before {
                content: "0000";
                opacity: 0;
            }
            .number-indent-5::before {
                content: "00000";
                opacity: 0;
            }
            a.external {
                border-bottom: none;
                color: inherit;
            }
            a.external svg {
                vertical-align: -2px;
                padding: 0 1px;
                fill: currentColor;
                {# Needed for wkhtmltopdf. -#}
                width: 1.1em;
            }
            footer {
                font-size: 0.85em;
                text-align: center;
                margin-top: 1.8em;
            }
            table, tr, td, th, tbody, thead, tfoot {
                {# Needed for wkhtmltopdf to avoid broken table rows. -#}
                page-break-inside: avoid !important;
            }
        </style>
    </head>

    <body>
        <header>
            <h1>{{ radio_table.name }}</h1>
        </header>

        {% include 'radio_table/table/radio_table.html.twig' %}

        <footer>
            <p>
                {{ 'radio_table.standalone.about'|trans({
                    '%anchor%': '<a href="' ~ app.request.schemeAndHttpHost ~ '">RadioLista</a>',
                    '%date%': 'now'|date_format,
                })|raw }}
            </p>
        </footer>

        <script>
        {#  Keep this script in sync with original code in common.js. -#}
        {#- This script is reorganized because wkhtmltopdf uses WebKit from 2011. :( -#}
        (function(table){
            NodeList.prototype.forEach = Array.prototype.forEach;

            var itemsGroups = [];

            table.querySelectorAll('[data-number-indent]').forEach(function(item){
                var groupName = item.dataset.numberIndent;

                if (undefined === itemsGroups[groupName]) {
                    itemsGroups[groupName] = [];
                }
                itemsGroups[groupName].push(item);
            });
            itemsGroups = Object.keys(itemsGroups).map(function(key){
                return itemsGroups[key];
            });

            itemsGroups.forEach(function(items){
                var numbers = items.map(function(item){
                    return parseInt(item.textContent);
                });
                var maxNumber = numbers.reduce(function(prev, value){
                    return (prev > value ? prev : value);
                });
                var maxDigits = maxNumber.toString().length;

                items.forEach(function(item){
                    var number = parseInt(item.textContent);
                    var digits = number.toString().length;
                    var digitsDifference = maxDigits - digits;

                    if (digitsDifference) {
                        item.classList.add('number-indent-' + digitsDifference);
                    }
                });
            });
        })(document.querySelector('table'));
        </script>
    {# Disable Symfony debug toolbar. -#}
    </body{{ app.debug ? ' ' : '' }}>
</html>
